// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.21.12
// source: word.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Word struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName   string                 `protobuf:"bytes,4,opt,name=englishName,proto3" json:"englishName,omitempty"`
	LanguageId    uint64                 `protobuf:"varint,5,opt,name=languageId,proto3" json:"languageId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Word) Reset() {
	*x = Word{}
	mi := &file_word_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Word) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Word) ProtoMessage() {}

func (x *Word) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Word.ProtoReflect.Descriptor instead.
func (*Word) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{0}
}

func (x *Word) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Word) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Word) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Word) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

func (x *Word) GetLanguageId() uint64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

type WordFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	LanguageId    uint64                 `protobuf:"varint,4,opt,name=languageId,proto3" json:"languageId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordFilter) Reset() {
	*x = WordFilter{}
	mi := &file_word_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordFilter) ProtoMessage() {}

func (x *WordFilter) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordFilter.ProtoReflect.Descriptor instead.
func (*WordFilter) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{1}
}

func (x *WordFilter) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WordFilter) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WordFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WordFilter) GetLanguageId() uint64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

type CreateWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName   string                 `protobuf:"bytes,2,opt,name=englishName,proto3" json:"englishName,omitempty"`
	LanguageId    uint64                 `protobuf:"varint,3,opt,name=languageId,proto3" json:"languageId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWordRequest) Reset() {
	*x = CreateWordRequest{}
	mi := &file_word_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWordRequest) ProtoMessage() {}

func (x *CreateWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWordRequest.ProtoReflect.Descriptor instead.
func (*CreateWordRequest) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWordRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWordRequest) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

func (x *CreateWordRequest) GetLanguageId() uint64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

type CreateWordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWordResponse) Reset() {
	*x = CreateWordResponse{}
	mi := &file_word_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWordResponse) ProtoMessage() {}

func (x *CreateWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWordResponse.ProtoReflect.Descriptor instead.
func (*CreateWordResponse) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{3}
}

func (x *CreateWordResponse) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

type GetWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *WordFilter            `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWordRequest) Reset() {
	*x = GetWordRequest{}
	mi := &file_word_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordRequest) ProtoMessage() {}

func (x *GetWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordRequest.ProtoReflect.Descriptor instead.
func (*GetWordRequest) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{4}
}

func (x *GetWordRequest) GetFilter() *WordFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetWordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWordResponse) Reset() {
	*x = GetWordResponse{}
	mi := &file_word_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordResponse) ProtoMessage() {}

func (x *GetWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordResponse.ProtoReflect.Descriptor instead.
func (*GetWordResponse) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{5}
}

func (x *GetWordResponse) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

type UpdateWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // ID of the word to update.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // New name for the word.
	EnglishName   string                 `protobuf:"bytes,3,opt,name=englishName,proto3" json:"englishName,omitempty"` // new english name for the word.
	LanguageId    string                 `protobuf:"bytes,4,opt,name=languageId,proto3" json:"languageId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWordRequest) Reset() {
	*x = UpdateWordRequest{}
	mi := &file_word_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWordRequest) ProtoMessage() {}

func (x *UpdateWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWordRequest.ProtoReflect.Descriptor instead.
func (*UpdateWordRequest) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateWordRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWordRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWordRequest) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

func (x *UpdateWordRequest) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

type UpdateWordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWordResponse) Reset() {
	*x = UpdateWordResponse{}
	mi := &file_word_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWordResponse) ProtoMessage() {}

func (x *UpdateWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWordResponse.ProtoReflect.Descriptor instead.
func (*UpdateWordResponse) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateWordResponse) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

type DeleteWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *WordFilter            `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWordRequest) Reset() {
	*x = DeleteWordRequest{}
	mi := &file_word_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWordRequest) ProtoMessage() {}

func (x *DeleteWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWordRequest.ProtoReflect.Descriptor instead.
func (*DeleteWordRequest) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWordRequest) GetFilter() *WordFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type DeleteWordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWordResponse) Reset() {
	*x = DeleteWordResponse{}
	mi := &file_word_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWordResponse) ProtoMessage() {}

func (x *DeleteWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWordResponse.ProtoReflect.Descriptor instead.
func (*DeleteWordResponse) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteWordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListWordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// WordFilter filter = 1;
	Page          uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`         // Pagination: page number.
	PageSize      uint32 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // Pagination: number of items per page.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWordRequest) Reset() {
	*x = ListWordRequest{}
	mi := &file_word_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordRequest) ProtoMessage() {}

func (x *ListWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordRequest.ProtoReflect.Descriptor instead.
func (*ListWordRequest) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{10}
}

func (x *ListWordRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWordRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListWordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Words         []*Word                `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	TotalCount    uint32                 `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWordResponse) Reset() {
	*x = ListWordResponse{}
	mi := &file_word_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordResponse) ProtoMessage() {}

func (x *ListWordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordResponse.ProtoReflect.Descriptor instead.
func (*ListWordResponse) Descriptor() ([]byte, []int) {
	return file_word_proto_rawDescGZIP(), []int{11}
}

func (x *ListWordResponse) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *ListWordResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_word_proto protoreflect.FileDescriptor

var file_word_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a,
	0x04, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0x64, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x22, 0x2f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x35, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x57, 0x6f, 0x72, 0x64,
	0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x22, 0x2f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x38, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x47, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x4a,
	0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x4f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52,
	0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x68, 0x69, 0x6e, 0x65, 0x2f, 0x67,
	0x69, 0x76, 0x65, 0x2d, 0x61, 0x2d, 0x73, 0x69, 0x67, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_word_proto_rawDescOnce sync.Once
	file_word_proto_rawDescData = file_word_proto_rawDesc
)

func file_word_proto_rawDescGZIP() []byte {
	file_word_proto_rawDescOnce.Do(func() {
		file_word_proto_rawDescData = protoimpl.X.CompressGZIP(file_word_proto_rawDescData)
	})
	return file_word_proto_rawDescData
}

var file_word_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_word_proto_goTypes = []any{
	(*Word)(nil),               // 0: Word
	(*WordFilter)(nil),         // 1: WordFilter
	(*CreateWordRequest)(nil),  // 2: CreateWordRequest
	(*CreateWordResponse)(nil), // 3: CreateWordResponse
	(*GetWordRequest)(nil),     // 4: GetWordRequest
	(*GetWordResponse)(nil),    // 5: GetWordResponse
	(*UpdateWordRequest)(nil),  // 6: UpdateWordRequest
	(*UpdateWordResponse)(nil), // 7: UpdateWordResponse
	(*DeleteWordRequest)(nil),  // 8: DeleteWordRequest
	(*DeleteWordResponse)(nil), // 9: DeleteWordResponse
	(*ListWordRequest)(nil),    // 10: ListWordRequest
	(*ListWordResponse)(nil),   // 11: ListWordResponse
}
var file_word_proto_depIdxs = []int32{
	0, // 0: CreateWordResponse.word:type_name -> Word
	1, // 1: GetWordRequest.filter:type_name -> WordFilter
	0, // 2: GetWordResponse.word:type_name -> Word
	0, // 3: UpdateWordResponse.word:type_name -> Word
	1, // 4: DeleteWordRequest.filter:type_name -> WordFilter
	0, // 5: ListWordResponse.words:type_name -> Word
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_word_proto_init() }
func file_word_proto_init() {
	if File_word_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_word_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_word_proto_goTypes,
		DependencyIndexes: file_word_proto_depIdxs,
		MessageInfos:      file_word_proto_msgTypes,
	}.Build()
	File_word_proto = out.File
	file_word_proto_rawDesc = nil
	file_word_proto_goTypes = nil
	file_word_proto_depIdxs = nil
}
